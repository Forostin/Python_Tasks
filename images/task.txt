3. За допомогою бібліотеки OpenCV об'єднати зображення green_rect.png i blue_triangle щоб фінальний результат виглядав як example.png.
6. За допомогою бібліотек Pytesseract або EasyOCR отримати текст із зображення text.png, при цьому кожний з трьох блоків з текстом має бути оброблений окремо.
1. За допомогою бібліотеки os вивести назви усіх файлів у поточній директорії.
1* - для усіх зображень (.png) що містяться у поточній папці вивести їх на екран на 1 секунду по черзі з використанням функції cv2.imshow()
2. Для зображення figures.png виконати наступні дії:
	- зменшити його розмір до 1000х500 пікселів
	- повернути зменшене зображення на 90 градусів за годинниковою стрілкою і зберегти результуюче зображення під назвою result.png
4. Конвертувати test.pdf файл у зображення у форматі .png за допомогою бібліотеки pypdfium2 (або іншої) і зберегти результуюче зображення.
5. Порахувати загальну кількість фігур на зображенні figures.png 
	-намалювати зелені рамки для фігур, площа яких перевищує 2000 пікселів
	-заповнити червоним кольором (cv2.drawContours з аргументом thickness=cv2.FILLED) фігури, що мають менше 5 кутів
	-вивести отримане зображення на екран до натискання клавіші "q"